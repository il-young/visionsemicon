//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "System_Setting.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "AdvEdit"
#pragma link "AdvIPEdit"
#pragma resource "*.dfm"
TSetting_Frm *Setting_Frm;
//---------------------------------------------------------------------------
__fastcall TSetting_Frm::TSetting_Frm(TComponent* Owner)
	: TForm(Owner)
{



}
//---------------------------------------------------------------------------
void __fastcall TSetting_Frm::tb_t3Change(TObject *Sender)
{
	int t3_temp;

	t3_temp = StrToInt(tb_t3->Text);

	if (t3_temp < 0 ) {
			tb_t3->Text = 0;
		}
		else if(t3_temp > 120){
			tb_t3->Text = 120;
		}
}
//---------------------------------------------------------------------------

void __fastcall TSetting_Frm::tb_t5Change(TObject *Sender)
{
		int t5_temp;

	t5_temp = StrToInt(tb_t5->Text);

	if (t5_temp < 0 ) {
			tb_t5->Text = 0;
		}
		else if(t5_temp > 240){
			tb_t5->Text = 240;
		}
}
//---------------------------------------------------------------------------

void __fastcall TSetting_Frm::tb_t6Change(TObject *Sender)
{
	int t6_temp;

	t6_temp = StrToInt(tb_t6->Text);

	if (t6_temp < 0 ) {
			tb_t6->Text = 0;
		}
		else if(t6_temp > 240){
			tb_t6->Text = 240;
		}
}
//---------------------------------------------------------------------------

void __fastcall TSetting_Frm::tb_t7Change(TObject *Sender)
{
	int t7_temp;

	t7_temp = StrToInt(tb_t7->Text);

	if (t7_temp < 0 ) {
			tb_t7->Text = 0;
		}
		else if(t7_temp > 240){
			tb_t7->Text = 240;
		}
}
//---------------------------------------------------------------------------

void __fastcall TSetting_Frm::tb_t8Change(TObject *Sender)
{
	int t8_temp;

	t8_temp = StrToInt(tb_t8->Text);

	if (t8_temp < 0 ) {
			tb_t8->Text = 0;
		}
		else if(t8_temp > 120){
			tb_t8->Text = 120;
		}
}
//---------------------------------------------------------------------------

void __fastcall TSetting_Frm::tb_t9Change(TObject *Sender)
{
	int t9_temp;

	t9_temp = StrToInt(tb_t9->Text);

	if (t9_temp < 0 ) {
			tb_t9->Text = 0;
		}
		else if(t9_temp > 240){
			tb_t9->Text = 240;
		}
}
//---------------------------------------------------------------------------

void __fastcall TSetting_Frm::btn_cancelClick(TObject *Sender)
{
	Setting_Frm->Close();
}
//---------------------------------------------------------------------------

void __fastcall TSetting_Frm::Settingfrm_OnActivate(TObject *Sender)
{
//	DBManager->ConnectDB();
//
//	stSECSInfo info =  DBManager->SelectSECSInfo();
//
//	tb_t3->Text = info.SECS_T3;
//	tb_t5->Text = info.SECS_T5;
//	tb_t6->Text = info.SECS_T6;
//	tb_t7->Text = info.SECS_T7;
//	tb_t8->Text = info.SECS_T8;
//	tb_t9->Text = info.SECS_T9;
//	cb_connect_mode->Text = info.SECS_TYPE;
//	AdvIPEdit1->IPAddress = info.SECS_LIP;
//	tb_local_port->Text  = info.SECS_LPORT;
//	AdvIPEdit2->IPAddress = info.SECS_RIP;
//	tb_remote_port->Text = info.SECS_RPORT;
//
//	tb_col->Text = info.SECS_COL;
//	tb_row->Text = info.SECS_ROW;

	//ts_maintenance->Visible = false;
	  //Read_Setting();

}
//---------------------------------------------------------------------------

void __fastcall TSetting_Frm::btn_okClick(TObject *Sender)
{
	DBManager->ConnectDB();
	stSECSInfo info =  DBManager->SelectSECSInfo();

	info.SECS_T3 = tb_t3->Text;
	info.SECS_T5 = tb_t5->Text;
	info.SECS_T6 = tb_t6->Text;
	info.SECS_T7 = tb_t7->Text;
	info.SECS_T8 = tb_t8->Text;
	info.SECS_T9 = tb_t9->Text;
	info.SECS_TYPE  =	cb_connect_mode->Text;
	info.SECS_LIP   =	AdvIPEdit1->IPAddress;
	info.SECS_LPORT =	tb_local_port->Text;
	info.SECS_RIP   =	AdvIPEdit2->IPAddress;
	info.SECS_RPORT =	tb_remote_port->Text;



	info.SECS_DEV_NUM = tb_dev_num->Text;
	info.SECS_MODELNAME = tb_model->Text;
	info.SECS_VERSION = tb_version->Text;

	if (!(info.SECS_COL == tb_col->Text) || !(info.SECS_ROW == tb_row->Text) )
	{
		DBManager->CarrierDB_Init(tb_col->Text.ToInt() , tb_row->Text.ToInt());

		info.SECS_COL = tb_col->Text;
		info.SECS_ROW = tb_row->Text;


		stkc_frm->PNT_ListBox("Change CarrierDB");
		stkc_frm->PNT_ListBox("ReStart SERVER!!");
		ShowMessage("ReStart SERVER!!");

		DBManager->EditSECS(info);

		stkc_frm->Close();
	}




	DBManager->EditSECS(info);

	Setting_Frm->Close();
}
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------

void __fastcall TSetting_Frm::Settingfrm_maintenance(TObject *Sender)
{
	  AnsiString temp1 = InputBox("Maintenance","Enter Maintenance Password","");

	if (temp1 == "mngr") {
		ts_maintenance->Enabled = true;
		ts_maintenance->Visible = true;

		tb_col->ReadOnly = false;
		tb_row->ReadOnly = false;
		tb_model->ReadOnly = false;
		tb_version->ReadOnly = false;

		stkc_frm->PNT_ListBox("Enter Maintenance Menu");


;
	}
	else {
		stkc_frm->PNT_ListBox("PERMISSION DENINED");
		MessageDlg("PERMISSION Denied",mtConfirmation,TMsgDlgButtons() << mbOK,0);


	}
}
//---------------------------------------------------------------------------
void __fastcall TSetting_Frm::Read_Setting()
{
	DBManager->ConnectDB();

	stSECSInfo info =  DBManager->SelectSECSInfo();

	Setting_Frm->tb_t3->Text = info.SECS_T3;
	Setting_Frm->tb_t5->Text = info.SECS_T5;
	Setting_Frm->tb_t6->Text = info.SECS_T6;
	Setting_Frm->tb_t7->Text = info.SECS_T7;
	Setting_Frm->tb_t8->Text = info.SECS_T8;
	Setting_Frm->tb_t9->Text = info.SECS_T9;
	Setting_Frm->cb_connect_mode->Text = info.SECS_TYPE;
	Setting_Frm->AdvIPEdit1->IPAddress = info.SECS_LIP;
	Setting_Frm->tb_local_port->Text  = info.SECS_LPORT;
	Setting_Frm->AdvIPEdit2->IPAddress = info.SECS_RIP;
	Setting_Frm->tb_remote_port->Text = info.SECS_RPORT;

	Setting_Frm->tb_col->Text = info.SECS_COL;
	Setting_Frm->tb_row->Text = info.SECS_ROW;

	Setting_Frm->tb_dev_num->Text  = info.SECS_DEV_NUM;
	Setting_Frm->tb_model->Text = info.SECS_MODELNAME;
	Setting_Frm->tb_version->Text = info.SECS_VERSION;

	stkc_frm->STK_SRVinfo.SRV_MODELNAME = info.SECS_MODELNAME;
	stkc_frm->STK_SRVinfo.SRV_VERSION = info.SECS_VERSION;

}


void __fastcall TSetting_Frm::DBCarrierInit()
{
	DBManager->InitCarrierDB();

}

